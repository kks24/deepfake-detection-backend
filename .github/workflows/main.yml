name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/deepfake-detection-backend:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/deepfake-detection-backend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2  # Add this to get access to your repository files
    
    - name: Copy model files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: "models/*"
        target: "~/deepfake-detection/"
        strip_components: 0

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          echo "Setting up deployment environment..."
          mkdir -p ~/deepfake-detection
          cd ~/deepfake-detection

          echo "Creating Docker Compose configuration..."
          cat > docker-compose.yml << 'EOL'
          services:
            api:
              image: ${{ secrets.DOCKER_HUB_USERNAME }}/deepfake-detection-backend:latest
              platform: linux/arm64
              ports:
                - "5000:5000"
              volumes:
                - ./models:/app/models
                - ./logs:/app/logs
              environment:
                - FLASK_APP=app/__init__.py
                - FLASK_ENV=production
                - MODEL_PATH=./models/facenet_real_fake_classifier_final.keras
              restart: unless-stopped
          EOL

          echo "Creating logs directory..."
          mkdir -p logs

          echo "Pulling and starting services..."
          docker compose pull
          docker compose up -d

          echo "Verifying deployment..."
          docker compose ps
          docker compose logs