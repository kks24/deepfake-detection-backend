name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Download model from R2
      run: |
        pip install boto3
        python - <<EOF
        import boto3
        import os
        from botocore.config import Config

        # Create R2 client
        s3_client = boto3.client(
            's3',
            endpoint_url='${{ secrets.R2_ENDPOINT_URL }}',
            aws_access_key_id='${{ secrets.R2_ACCESS_KEY_ID }}',
            aws_secret_access_key='${{ secrets.R2_SECRET_ACCESS_KEY }}',
            config=Config(retries={'max_attempts': 3})
        )

        # Create models directory
        os.makedirs('models', exist_ok=True)

        # Download model
        print("Downloading model from R2...")
        s3_client.download_file(
            '${{ secrets.R2_BUCKET_NAME }}',
            '${{ secrets.R2_MODEL_KEY }}',
            'models/facenet_real_fake_classifier_final.keras'
        )
        print("Model downloaded successfully")
        EOF
        
    - name: Run tests with coverage
      run: |
        pytest --cov=app tests/ --cov-report=xml
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/deepfake-detection-backend:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/deepfake-detection-backend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          echo "Setting up deployment environment..."
          mkdir -p ~/deepfake-detection
          cd ~/deepfake-detection

          echo "Creating Docker Compose configuration..."
          cat > docker-compose.yml << 'EOL'
          services:
            api:
              image: ${{ secrets.DOCKER_HUB_USERNAME }}/deepfake-detection-backend:latest
              platform: linux/arm64
              ports:
                - "5000:5000"
              volumes:
                - ./models:/app/models
                - ./logs:/app/logs
              environment:
                - FLASK_APP=app/__init__.py
                - FLASK_ENV=production
                - MODEL_PATH=models/facenet_real_fake_classifier_final.keras
                - R2_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }}
                - R2_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }}
                - R2_ENDPOINT_URL=${{ secrets.R2_ENDPOINT_URL }}
                - R2_BUCKET_NAME=${{ secrets.R2_BUCKET_NAME }}
                - R2_MODEL_KEY=${{ secrets.R2_MODEL_KEY }}
              restart: unless-stopped
          EOL

          echo "Creating required directories..."
          mkdir -p logs

          echo "Downloading model from R2..."
          python3 - <<EOF
          import boto3
          import os
          from botocore.config import Config

          s3_client = boto3.client(
              's3',
              endpoint_url='${{ secrets.R2_ENDPOINT_URL }}',
              aws_access_key_id='${{ secrets.R2_ACCESS_KEY_ID }}',
              aws_secret_access_key='${{ secrets.R2_SECRET_ACCESS_KEY }}',
              config=Config(retries={'max_attempts': 3})
          )

          os.makedirs('models', exist_ok=True)
          s3_client.download_file(
              '${{ secrets.R2_BUCKET_NAME }}',
              '${{ secrets.R2_MODEL_KEY }}',
              'models/facenet_real_fake_classifier_final.keras'
          )
          EOF

          echo "Pulling and starting services..."
          docker compose pull
          docker compose up -d

          echo "Verifying deployment..."
          docker compose ps
          docker compose logs